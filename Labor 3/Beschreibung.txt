Aufgabe 1:
	1)
		- Voltage Reference Unit als DAC verwenden
		- 5 Bit Auflösung, also nur 32 Stufen
		- Sägezahn von 0V bis 3,3V bei f = 500Hz
		- CVREF (Ausgangsspannung) soll in passenden Zeitabständen verändert werden
		- zunächst delay_us (u32 us) verwenden
		- an Oszilloskop betrachten
	
	2)
		- Qualität des Signals verbessern - Tiefpass mit R = 1 kOhm und Kondensator
		- Kapazität C des Kondensators berechnen
		
	3)
		- statt delay_us() soll Timer verwendet werden mit periodischem Interrupt
		- in ISR soll nextOutput() aufgerufen werden, um nächsten Wert des Sägezahns zu bestimmen und an CVREF auszugeben
		
	4)
		- variable Frequenz zwischen 200Hz und 1000Hz
		- Frequenz an Potentiometer einstellen
		- Spannung an Potentiometer in digitalen Wert umrechnen
		- linker Anschlag des Potentiometers 200Hz, rechter Anschlag 1000Hz
		- korrekte Arbeitsweise mit Oszilloskop überprüfen
		
Aufgabe 2:
	1)
		- Modifizierung der ersten Aufgabe mit sinus.h
		- Sinussignal zwischen 200Hz und 1000Hz über Potentiometer einstellbar
		- Oszilloskop betrachten
		
	2)
		- nextOutput() in MIPS-Assembler implementieren
		- entweder Inline-Assembler oder separate Datei nextOutput.s
		
Aufgabe 3:
	- Lautsprecher über Operationsverstärker an CVREF anschließen
	- C-Datenstruktur, um Töne und Pausen anzugeben
	=> duration ist der Kehrwert der Dauer eines Tons
	=> 1 = ganze Note, 2 = halbe Note, 4 = Viertelnote
	=> Dauer einer ganzen Note = 1 Sekunde
	- Frequenz 0Hz gibt Pause an
	
	1)
		- Aufgabe 2 modifizieren, um Melodie auszugeben
		- nach Pause von 2 Sekunden soll die Melodie in einer Endlosschleife wiederholt werden
		
	2)
		- über Operationsverstärker und Elektrolyt-Kondensator soll kleiner 8Ohm Lautsprecher an Ausgang CVREF angeschlossen werden